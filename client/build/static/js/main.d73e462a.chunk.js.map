{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","saveBook","bookData","fetch","method","headers","authorization","concat","body","JSON","stringify","removeBookId","bookId","savedBookIds","parse","updatedSavedBookIds","filter","savedBookId","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","REMOVE_BOOK","_templateObject3","_templateObject4","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","wrap","_context","prev","next","preventDefault","abrupt","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","t0","console","error","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_yield$saveBook","_context2","find","Auth","loggedIn","variables","input","data","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","GET_ME","SavedBooks","_useMutation","useMutation","_useMutation2","removeBook","_useQuery","useQuery","loading","userData","me","handleDeleteBook","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","_event$target","_objectSpread","_defineProperty","_yield$addUser","currentTarget","checkValidity","stopPropogation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","loginUser","_yield$loginUser","stopPropagation","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","App","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d73e462a.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\nmutation loginUser($email: String!, $password: String!) {\n    login(email: $email, password: $password){\n    token\n    user {\n        _id\n    }\n}\n}`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $password: String!, $email: String!){\n    addUser(username: $username, password: $password, email: $email) {\n        user{\n            _id\n            username\n            email\n            bookCount\n            savedBooks {\n                authors\n                bookId\n                image\n                link\n                title\n                description\n            }\n        }\n        token\n    }\n}`;\n\nexport const SAVE_BOOK = gql`\nmutation saveBook($input: savedBook!) {\n    saveBook (input: $input) {\n        _id\n        username\n        email\n        bookCount\n        savedBooks {\n            # _id\n            bookId\n            authors\n            image\n            link\n            title\n            description\n        }\n    }\n}`;\n\nexport const REMOVE_BOOK = gql`\nmutation removeBook($bookId: ID!) {\n    removeBook(bookId: $bookId) {\n        _id\n        username\n        email\n        bookCount\n        savedBooks {\n            # _id\n            bookId\n            authors\n            image\n            link\n            title\n            description\n        }\n    }\n}`;","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport {SAVE_BOOK} from '../utils/mutations';\nimport {useMutation} from '@apollo/react-hooks';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {data} = await saveBook({\n        variables: {input: bookToSave}\n      });\n\n\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n{\n    me {\n        _id\n        username\n        email\n        bookCount\n        savedBooks {\n            # _id\n            bookId\n            authors\n            image\n            link\n            title\n            description\n        }\n    }\n}`;","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport {GET_ME} from '../utils/queries';\nimport {REMOVE_BOOK} from '../utils/mutations';\nimport {useMutation, useQuery} from '@apollo/client';\n\nconst SavedBooks = () => {\n  const [removeBook, {error}] = useMutation(REMOVE_BOOK);\n  const {loading, data} = useQuery(GET_ME);\n  const userData = data?.me || [];\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await removeBook({\n        variables: {bookId}\n      });\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport {useMutation} from '@apollo/client'\nimport {ADD_USER} from '../utils/mutations'\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if(form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropogation();\n    }\n\n    try {\n        const {data} = await addUser({\n          variables: {...userFormData}\n        });\n        Auth.login(data.addUser.token)\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport {useMutation} from '@apollo/client';\nimport Auth from '../utils/auth';\nimport {LOGIN_USER} from '../utils/mutations';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n        const {data} = await loginUser({\n          variables: {...userFormData}\n        });\n        Auth.login(data.login.token)\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route \n            path='/' \n            element={<SearchBooks />} \n          />\n          <Route \n            path='/saved' \n            element={<SavedBooks />} \n          />\n          <Route \n            path='*'\n            element={<h1 className='display-2'>Wrong page!</h1>}\n          />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}